# Simple workflow for deploying static content to GitHub Pages
name: Deploy Eclipse Update Site on GitHub Pages

on:
  # Runs on tags starting with "build-"
  push:
    tags:
      - 'build-*'
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages and to create a release
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK version ${{ matrix.Java }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.Java }}
          cache: 'maven'        
      - name: Build with Maven Wrapper
        id: build-with-maven-wrapper
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./mvnw clean verify
      - name: Setup Pages
        uses: actions/configure-pages@v5
        # if: startsWith(github.ref, 'refs/tags/build-')
      - name: Upload artifacts
        # if: startsWith(github.ref, 'refs/tags/build-')
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: 'deployment/carisma.updatesite/target/repository'
      - name: Deploy to GitHub Pages
        # if: startsWith(github.ref, 'refs/tags/build-')
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Rename Updatesite ZIP
        id: rename_zip
        run: mv ./deployment/carisma.updatesite/target/carisma.updatesite-*.zip ./deployment/carisma.updatesite/target/carisma.updatesite-${{ github.ref_name }}.zip
      - name: Create Release
        # if: startsWith(github.ref, 'refs/tags/build-')
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: ./deployment/carisma.updatesite/target/carisma.updatesite-${{ github.ref_name }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
